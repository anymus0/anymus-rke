apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vmks
  namespace: argocd
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: vm
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - RespectIgnoreDifferences=true
  ignoreDifferences:
    - group: ""
      kind: Secret
      name: vmks-victoria-metrics-operator-validation
      namespace: vm
      jsonPointers:
        - /data
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      name: vmks-victoria-metrics-operator-admission
      jqPathExpressions:
      - '.webhooks[]?.clientConfig.caBundle'
  source:
    chart: victoria-metrics-k8s-stack
    repoURL: https://victoriametrics.github.io/helm-charts
    targetRevision: 0.60.1
    helm:
      releaseName: vmks
      valuesObject:
        victoria-metrics-operator:
          enabled: true
          operator:
            disable_prometheus_converter: false
            enable_converter_ownership: true
        grafana:
          enabled: false
        defaultDashboards:
          enabled: true
          labels:
            grafana_dashboard: "1"
          annotations:
            argocd.argoproj.io/sync-options: ServerSideApply=true
        vmsingle:
          enabled: false
        vmcluster:
          enabled: true
          vmselect:
            replicaCount: 2
          vminsert:
            enabled: true
          vmstorage:
            enabled: true
            persistentVolume:
              enabled: true
              size: 50Gi
        # Enable vmagent to scrape kube components
        vmagent:
          enabled: true
          spec:
            scrapeInterval: 30s
            # Enable hostNetwork mode
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            resources:
              requests:
                cpu: "0.3"
                memory: "512Mi"
              limits:
                memory: "512Mi"
        kubeControllerManager:
          enabled: true
          # Define localhost as the endpoint
          endpoints:
            - 127.0.0.1
          
          service:
            enabled: true
            port: 10257
            targetPort: 10257
            selector:
              component: kube-controller-manager
          
          vmScrape:
            spec:
              jobLabel: jobLabel
              endpoints:
                - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
                  port: http-metrics
                  scheme: https
                  tlsConfig:
                    caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                    # Skip server name verification since we're using 127.0.0.1
                    insecureSkipVerify: true
                  # Force scraping from localhost on each node
                  relabelConfigs:
                    - sourceLabels: [__address__]
                      targetLabel: __address__
                      replacement: 127.0.0.1:10257
        kubeScheduler:
          enabled: true
          endpoints:
            - 127.0.0.1
          
          service:
            enabled: true
            port: 10259
            targetPort: 10259
            selector:
              component: kube-scheduler
          
          vmScrape:
            spec:
              jobLabel: jobLabel
              endpoints:
                - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
                  port: http-metrics
                  scheme: https
                  tlsConfig:
                    caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                    insecureSkipVerify: true
                  relabelConfigs:
                    - sourceLabels: [__address__]
                      targetLabel: __address__
                      replacement: 127.0.0.1:10259
        kubeEtcd:
          enabled: true
          endpoints:
            - 127.0.0.1
          
          service:
            enabled: true
            port: 2381
            targetPort: 2381
            selector:
              component: etcd
          
          vmScrape:
            spec:
              jobLabel: jobLabel
              endpoints:
                - port: http-metrics
                  # Use HTTP scheme - etcd metrics on 2381 don't require TLS
                  scheme: http
                  # Force scraping from localhost on each node
                  relabelConfigs:
                    - sourceLabels: [__address__]
                      targetLabel: __address__
                      replacement: 127.0.0.1:2381
        kubeProxy:
          enabled: true