apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nextcloud
  namespace: argocd
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: cloud
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  source:
    chart: nextcloud
    repoURL: https://nextcloud.github.io/helm
    targetRevision: 8.0.1
    helm:
      releaseName: nextcloud
      valuesObject:
        replicaCount: 2
        ingress:
          enabled: true
          className: nginx
          annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
            nginx.ingress.kubernetes.io/client-body-buffer-size: "1m"
        nextcloud:
          host: cloud.anymus.pro
          phpConfigs:
            uploadLimit.ini: |
              upload_max_filesize = 0
              post_max_size = 0
              max_execution_time = 0
              max_input_time = 0
              memory_limit = -1
          configs:
            proxy.config.php: |-
              <?php
              $CONFIG = array (
                'trusted_proxies' => array('10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16'),
                'overwritehost' => 'cloud.anymus.pro',
                'overwriteprotocol' => 'https',
                'overwritewebroot' => '/',
                'overwrite.cli.url' => 'https://cloud.anymus.pro/',
                'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
              );
        redis:
          enabled: true
          global:
            storageClass: longhorn
        externalDatabase:
          enabled: true
          type: postgresql
          host: nextcloud-cnpg-cluster-rw:5432
          existingSecret:
            enabled: true
            secretName: nextcloud-postgresql-creds
            usernameKey: username
            passwordKey: password
            hostKey: host
            databaseKey: dbname
        internalDatabase:
          enabled: false
        postgresql:
          enabled: false
        persistence:
          enabled: true
          accessMode: ReadWriteMany
          storageClass: longhorn
          nextcloudData:
            enabled: true
            accessMode: ReadWriteMany
            storageClass: longhorn
            size: "200Gi"