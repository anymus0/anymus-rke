apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nextcloud
  namespace: argocd
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: cloud
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  source:
    chart: nextcloud
    repoURL: https://nextcloud.github.io/helm
    targetRevision: 6.6.10
    helm:
      releaseName: nextcloud
      valuesObject:
        replicaCount: 2
        ingress:
          enabled: true
          className: nginx
          annotations:
            nginx.ingress.kubernetes.io/proxy-set-headers: |
              X-Forwarded-Proto: https
              X-Forwarded-For: $proxy_add_x_forwarded_for
            nginx.ingress.kubernetes.io/server-snippet: |-
              server_tokens off;
              proxy_hide_header X-Powered-By;
              rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
              rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
              rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
              rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
              location = /.well-known/carddav {
                return 301 $scheme://$host/remote.php/dav;
              }
              location = /.well-known/caldav {
                return 301 $scheme://$host/remote.php/dav;
              }
              location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
              }
              location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
                deny all;
              }
              location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
                deny all;
              }
        nextcloud:
          host: cloud.anymus.pro
          configs:
            proxy.config.php: |-
              <?php
              $CONFIG = array (
                'trusted_proxies' => array('10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16'),
                'overwritehost' => 'cloud.anymus.pro',
                'overwriteprotocol' => 'https',
                'overwritewebroot' => '/',
                'overwrite.cli.url' => 'https://cloud.anymus.pro/',
                'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
              );
        redis:
          enabled: true
          global:
            storageClass: longhorn
        externalDatabase:
          enabled: true
          type: postgresql
          host: nextcloud-cnpg-cluster-rw:5432
          existingSecret:
            enabled: true
            secretName: nextcloud-postgresql-creds
            usernameKey: username
            passwordKey: password
            hostKey: host
            databaseKey: dbname
        internalDatabase:
          enabled: false
        postgresql:
          enabled: false
        persistence:
          enabled: true
          accessMode: ReadWriteMany
          storageClass: longhorn
          nextcloudData:
            enabled: true
            accessMode: ReadWriteMany
            storageClass: longhorn
            size: "200Gi"